[1mdiff --git a/src/routes/TicTacToe.svelte b/src/routes/TicTacToe.svelte[m
[1mindex c5a738a..39dd8af 100644[m
[1m--- a/src/routes/TicTacToe.svelte[m
[1m+++ b/src/routes/TicTacToe.svelte[m
[36m@@ -1,129 +1,35 @@[m
 <script>[m
   import { onMount } from "svelte";[m
 [m
[31m-  $: numberOfPlayers = 3;[m
[31m-  $: hueDeg = 360 / numberOfPlayers;[m
[32m+[m[32m  $: testValue = "test value";[m
[32m+[m[32m  $: lastTicked = {};[m
   $: rows = 4;[m
   $: columns = 4;[m
   $: size = 24;[m
   $: gutter = 0;[m
   $: currentPlayer = {};[m
[31m-  $: currentPlayerId = 0;[m
   $: movesPerTurn = 3;[m
   $: cellsToScore = 3;[m
[31m-  $: bonusForCompleteRow = 5;[m
   $: movesRemaining = 0;[m
   $: turn = 0;[m
[31m-  $: lastTicked = {};[m
   $: gameHistory = [];[m
   $: turnHistory = [];[m
   $: clickCount = 0;[m
   $: moveNumber = 0;[m
   $: gameboardMapped = [];[m
   $: tickedArray = [];[m
[31m-  $: scoredPlayers = [[m
[31m-    {[m
[31m-      id: 0,[m
[31m-      name: "Player 0",[m
[31m-      totalScore: 0,[m
[31m-      bgColor: `hsla(60, 50%, 50%, .75)`,[m
[31m-      moves: 0,[m
[31m-      scores: [[m
[31m-        {[m
[31m-          id: 1,[m
[31m-          name: "Horizontal",[m
[31m-          src: "tictactoe-horizontal.png",[m
[31m-          lines: lines.leftToRight,[m
[31m-          scoringLines: [],[m
[31m-          dirScore: 0,[m
[31m-          iconSrc: "tictactoe-horizontal.png"[m
[31m-        },[m
[31m-        {[m
[31m-          id: 2,[m
[31m-          name: "Vertical",[m
[31m-          src: "tictactoe-horizontal.png",[m
[31m-          lines: lines.topToBottom,[m
[31m-          scoringLines: [],[m
[31m-          dirScore: 0,[m
[31m-          iconSrc: "tictactoe-vertical.png"[m
[31m-        },[m
[31m-        {[m
[31m-          id: 3,[m
[31m-          name: "Diagonal (down left)",[m
[31m-          src: "tictactoe-horizontal.png",[m
[31m-          lines: lines.diagonalDownLeft,[m
[31m-          scoringLines: [],[m
[31m-          dirScore: 0,[m
[31m-          iconSrc: "tictactoe-diagonal-down-left.png"[m
[31m-        },[m
[31m-        {[m
[31m-          id: 4,[m
[31m-          name: "Diagonal (down right)",[m
[31m-          src: "tictactoe-horizontal.png",[m
[31m-          lines: lines.diagonalDownRight,[m
[31m-          scoringLines: [],[m
[31m-          dirScore: 0,[m
[31m-          iconSrc: "tictactoe-diagonal-down-right.png"[m
[31m-        }[m
[31m-      ][m
[31m-    },[m
[31m-    {[m
[31m-      id: 1,[m
[31m-      name: "Player 1",[m
[31m-      totalScore: 0,[m
[31m-      bgColor: `hsla(120, 50%, 50%, .75)`,[m
[31m-      moves: 0,[m
[31m-      scores: [[m
[31m-        {[m
[31m-          id: 1,[m
[31m-          name: "Horizontal",[m
[31m-          src: "tictactoe-horizontal.png",[m
[31m-          lines: lines.leftToRight,[m
[31m-          scoringLines: [],[m
[31m-          dirScore: 0,[m
[31m-          iconSrc: "tictactoe-horizontal.png"[m
[31m-        },[m
[31m-        {[m
[31m-          id: 2,[m
[31m-          name: "Vertical",[m
[31m-          src: "tictactoe-horizontal.png",[m
[31m-          lines: lines.topToBottom,[m
[31m-          scoringLines: [],[m
[31m-          dirScore: 0,[m
[31m-          iconSrc: "tictactoe-vertical.png"[m
[31m-        },[m
[31m-        {[m
[31m-          id: 3,[m
[31m-          name: "Diagonal (down left)",[m
[31m-          src: "tictactoe-horizontal.png",[m
[31m-          lines: lines.diagonalDownLeft,[m
[31m-          scoringLines: [],[m
[31m-          dirScore: 0,[m
[31m-          iconSrc: "tictactoe-diagonal-down-left.png"[m
[31m-        },[m
[31m-        {[m
[31m-          id: 4,[m
[31m-          name: "Diagonal (down right)",[m
[31m-          src: "tictactoe-horizontal.png",[m
[31m-          lines: lines.diagonalDownRight,[m
[31m-          scoringLines: [],[m
[31m-          dirScore: 0,[m
[31m-          iconSrc: "tictactoe-diagonal-down-right.png"[m
[31m-        }[m
[31m-      ][m
[31m-    }[m
[31m-  ];[m
[32m+[m[32m  $: scoredPlayers = [];[m
   $: players = [[m
     {[m
       id: 0,[m
       name: "Kaya",[m
       totalScore: 0,[m
[31m-      bgColor: `hsla(60, 50%, 50%, .75)`,[m
[32m+[m[32m      bgColor: '',[m
       moves: 0,[m
       scores: [[m
         {[m
           id: 1,[m
[31m-          name: "Horizontal",[m
[32m+[m[32m          name: "leftToRight",[m
           src: "tictactoe-horizontal.png",[m
           lines: lines.leftToRight,[m
           scoringLines: [],[m
[36m@@ -132,7 +38,7 @@[m
         },[m
         {[m
           id: 2,[m
[31m-          name: "Vertical",[m
[32m+[m[32m          name: "topToBottom",[m
           src: "tictactoe-horizontal.png",[m
           lines: lines.topToBottom,[m
           scoringLines: [],[m
[36m@@ -141,7 +47,7 @@[m
         },[m
         {[m
           id: 3,[m
[31m-          name: "Diagonal (down left)",[m
[32m+[m[32m          name: "diagonalDownLeft",[m
           src: "tictactoe-horizontal.png",[m
           lines: lines.diagonalDownLeft,[m
           scoringLines: [],[m
[36m@@ -150,7 +56,7 @@[m
         },[m
         {[m
           id: 4,[m
[31m-          name: "Diagonal (down right)",[m
[32m+[m[32m          name: "diagonalDownRight",[m
           src: "tictactoe-horizontal.png",[m
           lines: lines.diagonalDownRight,[m
           scoringLines: [],[m
[36m@@ -163,12 +69,12 @@[m
       id: 1,[m
       name: "Mike",[m
       totalScore: 0,[m
[31m-      bgColor: `hsla(120, 50%, 50%, .75)`,[m
[32m+[m[32m      bgColor: '',[m
       moves: 0,[m
       scores: [[m
         {[m
           id: 1,[m
[31m-          name: "Horizontal",[m
[32m+[m[32m          name: "leftToRight",[m
           src: "tictactoe-horizontal.png",[m
           lines: lines.leftToRight,[m
           scoringLines: [],[m
[36m@@ -177,7 +83,7 @@[m
         },[m
         {[m
           id: 2,[m
[31m-          name: "Vertical",[m
[32m+[m[32m          name: "topToBottom",[m
           src: "tictactoe-horizontal.png",[m
           lines: lines.topToBottom,[m
           scoringLines: [],[m
[36m@@ -186,7 +92,7 @@[m
         },[m
         {[m
           id: 3,[m
[31m-          name: "Diagonal (down left)",[m
[32m+[m[32m          name: "diagonalDownLeft",[m
           src: "tictactoe-horizontal.png",[m
           lines: lines.diagonalDownLeft,[m
           scoringLines: [],[m
[36m@@ -195,7 +101,7 @@[m
         },[m
         {[m
           id: 4,[m
[31m-          name: "Diagonal (down right)",[m
[32m+[m[32m          name: "diagonalDownRight",[m
           src: "tictactoe-horizontal.png",[m
           lines: lines.diagonalDownRight,[m
           scoringLines: [],[m
[36m@@ -205,6 +111,8 @@[m
       ][m
     }[m
   ];[m
[32m+[m[32m  // $: players.forEach(player => {console.log(player)});[m
[32m+[m[32m  $: console.log(`Kaya's horizontal score: ${players[0].scores[0].dirScore}`);[m
   $: lines = {[m
     leftToRight: [],[m
     topToBottom: [],[m
[36m@@ -212,14 +120,12 @@[m
     diagonalDownRight: [][m
   };[m
   $: scores = [];[m
[32m+[m[32m  $: numberOfPlayers = 2;[m
 [m
   onMount(() => {[m
[31m-    initializePlayers();[m
     renderGameBoard(rows, columns, size, gutter);[m
     movesRemaining = movesPerTurn;[m
[31m-    scoredPlayers = players;[m
[31m-    currentPlayer = scoredPlayers[0];[m
[31m-    localStorage.setItem(`currentPlayer`, JSON.stringify(currentPlayer));[m
[32m+[m[32m    currentPlayer = players[0];[m
   });[m
 [m
   function reset() {[m
[36m@@ -237,72 +143,6 @@[m
     renderGameBoard(rows, columns, size, gutter);[m
   }[m
 [m
[31m-  function initializePlayers() {[m
[31m-    players = [];[m
[31m-    // let hueDeg = 360 / numberOfPlayers;[m
[31m-    for (let i = 0; i < numberOfPlayers; i++) {[m
[31m-      console.log([m
[31m-        `initializePlayers: bgColor hue ${(i + 1) * (360 / numberOfPlayers)}`[m
[31m-      );[m
[31m-      players = [[m
[31m-        ...players,[m
[31m-        {[m
[31m-          id: 0,[m
[31m-          name: `Player ${i + 1}`,[m
[31m-          totalScore: 0,[m
[31m-          bgColor: `hsla(${(i + 1) * (360 / numberOfPlayers)}, 50%, 50%, .75)`,[m
[31m-          moves: 0,[m
[31m-          scores: [[m
[31m-            {[m
[31m-              id: 1,[m
[31m-              name: "Horizontal",[m
[31m-              src: "tictactoe-horizontal.png",[m
[31m-              lines: lines.leftToRight,[m
[31m-              scoringLines: [],[m
[31m-              dirScore: 0,[m
[31m-              iconSrc: "tictactoe-horizontal.png"[m
[31m-            },[m
[31m-            {[m
[31m-              id: 2,[m
[31m-              name: "Vertical",[m
[31m-              src: "tictactoe-horizontal.png",[m
[31m-              lines: lines.topToBottom,[m
[31m-              scoringLines: [],[m
[31m-              dirScore: 0,[m
[31m-              iconSrc: "tictactoe-vertical.png"[m
[31m-            },[m
[31m-            {[m
[31m-              id: 3,[m
[31m-              name: "Diagonal (down left)",[m
[31m-              src: "tictactoe-horizontal.png",[m
[31m-              lines: lines.diagonalDownLeft,[m
[31m-              scoringLines: [],[m
[31m-              dirScore: 0,[m
[31m-              iconSrc: "tictactoe-diagonal-down-left.png"[m
[31m-            },[m
[31m-            {[m
[31m-              id: 4,[m
[31m-              name: "Diagonal (down right)",[m
[31m-              src: "tictactoe-horizontal.png",[m
[31m-              lines: lines.diagonalDownRight,[m
[31m-              scoringLines: [],[m
[31m-              dirScore: 0,[m
[31m-              iconSrc: "tictactoe-diagonal-down-right.png"[m
[31m-            }[m
[31m-          ][m
[31m-        }[m
[31m-      ];[m
[31m-    }[m
[31m-    scoredPlayers = players;[m
[31m-    players = players;[m
[31m-    localStorage.setItem("generatedPlayers", JSON.stringify(scoredPlayers));[m
[31m-  }[m
[31m-[m
[31m-  function modifyNumberOfPlayers() {[m
[31m-    initializePlayers();[m
[31m-    console.log(`number of player ${numberOfPlayers}`);[m
[31m-  }[m
[31m-[m
   function triggerGameBoardUpdate(e) {[m
     reset();[m
     e.target.style.width = `${e.target.value.toString().length + 0.5}ch`;[m
[36m@@ -317,27 +157,30 @@[m
     localStorage.setItem("gameboard", JSON.stringify(gameboardMapped));[m
 [m
     players.forEach(player => {[m
[32m+[m[32m      console.dir(player);[m
       player.scores.forEach(direction => {[m
[32m+[m[32m        console.dir(direction);[m
         direction["dirScore"] = score(direction, player);[m
         player["totalScore"] += direction["dirScore"];[m
[31m-        // localStorage.setItem([m
[31m-        //   `${direction.name}`,[m
[31m-        //   JSON.stringify(`lines.${direction.name}`)[m
[31m-        // );[m
[32m+[m[32m        console.dir(direction["dirScore"]);[m
[32m+[m[32m        // players = players[m
[32m+[m[32m        localStorage.setItem([m
[32m+[m[32m          `${direction.name}`,[m
[32m+[m[32m          JSON.stringify(`lines.${direction.name}`)[m
[32m+[m[32m        );[m
       });[m
     });[m
[31m-[m
     scoredPlayers = players;[m
[31m-    players = players[m
     lines = lines;[m
[31m-[m
     localStorage.setItem(`players`, "");[m
     localStorage.setItem(`players`, JSON.stringify(players));[m
[32m+[m[32m    console.log("players object just after set localStorage");[m
[32m+[m[32m    console.log(players);[m
   }[m
 [m
   function score(direction, player) {[m
     // $: cellsToScore[m
[31m-    // console.log(`score called with direction `, direction);[m
[32m+[m[32m    console.log(`score called with direction `, direction);[m
 [m
     let dirLines = [];[m
     let dirScore = 0;[m
[36m@@ -375,6 +218,16 @@[m
     return dirScore;[m
   }[m
 [m
[32m+[m[32m  function setIcon(direction) {[m
[32m+[m[32m    icons.forEach(icon => {[m
[32m+[m[32m      if (direction.name == icon.name) {[m
[32m+[m[32m        console.log([m
[32m+[m[32m          `directions name matches icon name ${direction.name}, ${icon.src}`[m
[32m+[m[32m        );[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
   function setPlayerMove(squareId) {[m
     gameboardMapped.forEach(move => {[m
       if (move.id == squareId) {[m
[36m@@ -449,6 +302,8 @@[m
       newLine = [];[m
 [m
     if (direction.id == 1) {[m
[32m+[m[32m      console.log(" ************ LeftToRight ********************");[m
[32m+[m
       start = { row: 0, column: 0 };[m
       pattern = { row: 0, column: +1 };[m
 [m
[36m@@ -461,6 +316,8 @@[m
     }[m
 [m
     if (direction.id == 2) {[m
[32m+[m[32m      console.log(" ************ TopToBottom ********************");[m
[32m+[m
       start = { row: 0, column: 0 };[m
       pattern = { row: +1, column: 0 };[m
 [m
[36m@@ -473,6 +330,8 @@[m
     }[m
 [m
     if (direction.id == 3) {[m
[32m+[m[32m      console.log(" ************ diagonalDownRight ********************");[m
[32m+[m
       start = { row: rows, column: 0 };[m
       pattern = { row: +1, column: +1 };[m
 [m
[36m@@ -494,6 +353,7 @@[m
     }[m
 [m
     if (direction.id == 4) {[m
[32m+[m[32m      console.log(" ************ diagonalDownLeft ********************");[m
       start = { row: rows, column: columns - 1 };[m
       pattern = { row: +1, column: -1 };[m
 [m
[36m@@ -528,6 +388,14 @@[m
   }[m
 [m
   function nextSquareFrom(row, column, rowChange, columnChange, line) {[m
[32m+[m[32m    // the following line is crucial to refactoring to use the gameboardMapped and gameHistory arrays to build our scoring arrays[m
[32m+[m[32m    // I'll need to replace that de novo object with a copy of the object from gameboardMapped[m
[32m+[m
[32m+[m[32m    // also, need to add a function to complete turn (and execute associated functions) with fewer than assigned moves per turn,[m
[32m+[m[32m    // if it is the last move of the game. Can check length of gameHistory against gameboardMapped.[m
[32m+[m
[32m+[m[32m    // console.log(`nextSquareFrom R${row}C${column} ${id}`);[m
[32m+[m
     line = [[m
       ...line,[m
       {[m
[36m@@ -568,15 +436,15 @@[m
     while (gameboard.firstChild) {[m
       gameboard.removeChild(gameboard.firstChild);[m
     }[m
[31m-    // console.log(`rows: ${rows} columns: ${columns}`);[m
[32m+[m[32m    console.log(`rows: ${rows} columns: ${columns}`);[m
     for (let rowNum = 0; rowNum < rows; rowNum++) {[m
[31m-      // console.log(`row: ${rowNum}`);[m
[32m+[m[32m      console.log(`row: ${rowNum}`);[m
       let row = document.createElement("div");[m
       row.classList = "game-row";[m
       gameboard.appendChild(row);[m
 [m
       for (let colNum = 0; colNum < columns; colNum++) {[m
[31m-        // console.log(`row: ${rowNum} column: ${colNum}`);[m
[32m+[m[32m        console.log(`row: ${rowNum} column: ${colNum}`);[m
         let square = document.createElement("div");[m
         square.classList = "game-square";[m
         square.style = "--custom-bg: rgba(150, 150, 255, 0.75)";[m
[36m@@ -645,7 +513,7 @@[m
   }[m
 [m
   function playMove(e) {[m
[31m-    // localStorage.setItem(`currentPlayer`, JSON.stringify(currentPlayer));[m
[32m+[m[32m    localStorage.setItem(`currentPlayer`, currentPlayer);[m
     clickCount++;[m
     let square = e.target;[m
     let ticked = square.dataset.ticked == "true";[m
[36m@@ -696,10 +564,23 @@[m
     square.classList.add("ticked");[m
     // addToScoringArray(square);[m
     square.dataset.ticked = true;[m
[31m-    square.setAttribute("data-marker", "X");[m
[31m-    square.setAttribute("player-id", currentPlayer.id);[m
[31m-    square.setAttribute("player-name", currentPlayer.name);[m
[31m-    square.style = `--custom-bg: ${currentPlayer.bgColor}`;[m
[32m+[m
[32m+[m[32m    if (currentPlayer.id == 0) {[m
[32m+[m[32m      console.log(`currentPlayer.id == 0`);[m
[32m+[m[32m      square.setAttribute("data-marker", "X");[m
[32m+[m[32m      s